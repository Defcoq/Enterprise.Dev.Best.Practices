@using EA.JP.Ecommerce.Services.ViewModels
@using EA.JP.Ecommerce.Controllers.ViewModels.CustomerAccount
@model CustomerOrderView

@{
    ViewBag.Title = "Detail";
    Layout = "~/Views/Shared/_CustomerAccount.cshtml";
}


@section TitleContent
{
    Your Order Detail
}
    
    


        <h2>Order # @Html.Encode(Model.Order.Id) placed on @Html.Encode(Model.Order.Created.ToLongDateString())  at @Html.Encode(Model.Order.Created.ToShortTimeString())</h2>

        @if (Model.Order.OrderHasBeenPaidFor == false) {
        <p>
            This order has not been paid.
            @Html.ActionLink("Pay", "CreatePaymentFor", "Payment",
            new { orderId = Model.Order.Id }, null)%>
        </p>
        }
        else
        {
        
        <p>
            Paid on @Html.Encode(Model.Order.PaymentDatePaid).
            Payment ref @Html.Encode(Model.Order.PaymentTransactionId)
        </p>
        
        }


        <ul>
            @foreach (OrderItemView item in Model.Order.Items)
            {
            <li>
                @Html.Encode(item.Qty)  of Html.Encode(item.ProductName) 
                (@Html.Encode(item.ProductSizeName)) at
                @Html.Encode(String.Format("{0:F}", item.Price))
            </li>
            }
        </ul>

        <p>
            Shipping Charge: @Html.Encode(String.Format("{0:F}",
            Model.Order.ShippingCharge))
        </p>
        <p>
            Shipping Via: @Html.Encode(Model.Order.ShippingServiceCourierName) -
            @Html.Encode(Model.Order.ShippingServiceDescription)
        </p>
        <p>Total: @Html.Encode(String.Format("{0:F}", Model.Order.Total))</p>

        <p>Delivery Address</p>

        @Html.Encode(Model.Order.DeliveryAddress.AddressLine1)
        <br />
        @Html.Encode(Model.Order.DeliveryAddress.AddressLine2)
        <br />
        @Html.Encode(Model.Order.DeliveryAddress.City)
        <br />
        @Html.Encode(Model.Order.DeliveryAddress.State)
        <br />
        @Html.Encode(Model.Order.DeliveryAddress.ZipCode)
        <br />
        @Html.Encode(Model.Order.DeliveryAddress.Country)
        <br />

